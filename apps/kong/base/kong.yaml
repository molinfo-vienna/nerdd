---
# Source: ingress/charts/controller/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-controller
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
---
# Source: ingress/charts/gateway/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-gateway
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-controller-validation-webhook-ca-keypair
  namespace:  kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRZm5sMmplMjBhSVBvSEtIS3pMRi9MakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEF4TURRd09EUTJNVEJhRncwegpOVEF4TURJd09EUTJNVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1hUGR6am9aVTZ5dGNPeEI2VE5JbkowRTdiVTAKc1piWkkybjhXamlhZFhnbTNUM3Mwb3FGZ2tMbFlXK1dKSE1pa3YyR0UxRXNmYWtTZmRiZnRDUStTdU11bmlZMgpxVVA3dU5NcWJXRVBTTWNOK3RCS3JPUFg3eVJMejQ2bWtoWDJ4WGhuRXFwVTAzMi84QWlUUEV0TERMWjBUaytaCjA4aGhVVlJtOWlxdzMxMUp3QlY2dkpLdktvRzA4WHdJekxFRzBXR0xadTltYjRsZGErclptbmJVMGJXdzE1dnMKTEljOU9FbGlsZEpQOUdIeG1sNm92QWt6UVZoZDVvVlpqUTZGSDI1N0t1SjZ6ajg1ZDlTQ3pOS1lTVVVoRkloUwpRY0IrNVNVVEpTQmFETm9rUWQxbzZRdnJEMDFyMEt6OEhEOHVXSXR5eU5xYm5rZzBrQ2p3Z2xsbmd3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFMTV6QkJGc1RDcFQxVGozSEl4TjNHQgpyWHVYTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOVBuRWZyRXFJRjJYb0xlVCsrNjhJM1hmVHVYd1JPNDAyCmtLVHFMVThwOVEvbUgwNEx1bkU1aFR6SXJZd0ZxRk1HTTdWTjgyd2o3TE1vVURxWUhKRW5ldkZ6d2Q5d0JIZHoKMWZObENNRVFkUVpYMkg1anlIek1sV2xSdHhsWGhmMVFTM3ROd09OcytBb042YmZIQ1Q4Yk8rSlNCZkRVNHN0dgphWE1YNk4ydEE5VUU2bXNiVXNFeTdIaS9DVzVEMFQzdnJ3cUNTUGZqNllPVmxCT3RvTkZqWGlDS3NrcVVrdXowCit3RnFyNU50MkJpQzlBTStrTkVhMElqSFBHMFhsdWZoL2ExdG12WHV6Vy9ndGhDWk9PWENnTS9pZ1BKVHhzc3cKQVY5ZkhiaE5jVDZGMVFBUldITDZOb0xsYmRnbzJKV1RQdE9LR1J4N2IyV0lzZE4wejl0SgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbWFQZHpqb1pVNnl0Y094QjZUTkluSjBFN2JVMHNaYlpJMm44V2ppYWRYZ20zVDNzCjBvcUZna0xsWVcrV0pITWlrdjJHRTFFc2Zha1NmZGJmdENRK1N1TXVuaVkycVVQN3VOTXFiV0VQU01jTit0QksKck9QWDd5Ukx6NDZta2hYMnhYaG5FcXBVMDMyLzhBaVRQRXRMRExaMFRrK1owOGhoVVZSbTlpcXczMTFKd0JWNgp2Skt2S29HMDhYd0l6TEVHMFdHTFp1OW1iNGxkYStyWm1uYlUwYld3MTV2c0xJYzlPRWxpbGRKUDlHSHhtbDZvCnZBa3pRVmhkNW9WWmpRNkZIMjU3S3VKNnpqODVkOVNDek5LWVNVVWhGSWhTUWNCKzVTVVRKU0JhRE5va1FkMW8KNlF2ckQwMXIwS3o4SEQ4dVdJdHl5TnFibmtnMGtDandnbGxuZ3dJREFRQUJBb0lCQUM5bSszd3hPTGMwUTU3ZgpoY1pwYURISjBFZDI3UGNOejVpNWpuNVhrSEJGemRmY3owQjJOSkxvQ05WekZDUFMwZ3YvNUduNVZYeS91VkRTCkJ0c1JnNWFmV1RhNkc0dEZ5bGhQN25zb3d3cDFQNzd1bk51U3dJQ3I5aWZubjBUYk9mUGJIaElJTTN1OUJJY08KWGo3d0RBdTBEMVpLQU8veWx2UDgwbmVJM0dGTmNKMEN1VGlVN2JvZVNWd3cwTTUweEZsUXorOG5EWElmaGNHbgpVelUwa0hVbVl4R1RmZVExQTFOTGJzTWNUcHpDN1BNWDZOUUdVWWljSGp4L0xHZXJWS0RUcG9CVmtyT0ZuYzkrCnRnS21XZ2ZQbk8wdUtWWnZPaXFmdCt2eWFlZDVmUGFRQzNreHlKZUZHWGRNdWhFdmVkVURCSEpYaW1nODhSMnMKTWh4anNVRUNnWUVBeUlRTWc0WjU3MEYxMVRvWkJxd2hwMXpqK3dNRWY5WW94dFlvZ0loREtEbDRTZmlSL3dGTwpya2JkdHJoN0E1cyt1OHc1eTZhc1AvWTd6K0JaYytBdVJrWDVNaUpvd010NTJ3RmVSY3VMc3NINHQxWXpMUnpjClBkQ0YxRDM5NnBtcWEvc0J6VVM1YkF1enZSL3dVblU4MUlSSWVWSU9mVEw1RGtvTGN6UHZNSnNDZ1lFQXhDZEgKb2lQV2g3Vnc2Y05QbVhVZEl6Ylg1U3JCS2RhS3JJeVVRSUNvTHJtdHhwWTdnenBHbDZaVk5lS1JxdStIRG00ZApONjg2STVIV3U1aFBJaHRoMWtVU0lvdHY2Z0duSGtpNWhoREU0empoNXRKTUprQXVWbE8vK3IzaHNMUnNGS1lhCnUrSy93czcxL2ZFR2xZWGVnaFdIazhGKzdmVHFESkNZSmo1amp6a0NnWUJvT3hRU0xvNGx5NTVINTdwb21JT3AKN3dSblQ4cy85SUFmMCtVYjR6a2RxTG9ab1llcXlmQXZjWkVBMFdiSW1pT0RGWWNaa0p0TGFHRHhEd3NRekFEaAo4SyszMnVFZkR1Wlo3SjBucE1ZS2R3QWx0VDVHL2hDU1pWbWIyVm1yWUpPUks5cGs3SXVDV1pibUFiczM4YzljCkhTTmJSVWRZMTIxVmV6SDJnWkdkYndLQmdBaktYZHAxVXJMb1BiUXNMWkFLQUpGSWJ1cDFQUXpiOFlFRUY4ekEKTjBsSXh2SGtYNnhrMnk4R3BFRHk4MlkrcjhYRXg0aHNVT1d4TG5kZnZ3UWZTQVlyT0VIV0QrRGp6QkorWGRvVgpQRTJXaWdFbklZU0JVZEpLbElydklZTWl3c2sySEhLWkdkRG9KM3dHNWkyalB6S0RObjAzcWJHT1RVTGM1QVNxCnZSbDVBb0dBQkFOaDd6TWxRenJaejNWSmxIeVhyMVdpY3hPVUczTmFkdE9LaUFjcWVUL0JXMVd2NkNoY1dWTXYKOGNTdUJhUXpaWE9LV2g1MGRQb05pR0FoSGtrQkpuN1Nod1JmWTFGZGU5MDEwS25oOU1JbHlEbGpkYXBvQ2ZIYgp3dlQ5dGVWVElKOUdtNzB5am44TU1ZTUNGdFRDd1F4TVgrS2ZYdEJmM3ZzSGhZQTVEZmM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-controller-validation-webhook-keypair
  namespace:  kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkekNDQWwrZ0F3SUJBZ0lSQUtNeVMvU2VCczBXQXY5aXEzVXF0d1V3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3TVRBME1EZzBOakV3V2hjTgpNelV3TVRBeU1EZzBOakV3V2pBMk1UUXdNZ1lEVlFRREV5dHJiMjVuTFdOdmJuUnliMnhzWlhJdGRtRnNhV1JoCmRHbHZiaTEzWldKb2IyOXJMbXR2Ym1jdWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUEzWWR2cjl1bHVFeko4Nm1xTlV2SDYvbE84anUyN0kreXZnQW9jSFZOakJ4QWZMb2xWKzdhckN6awpCY0pEK1ZGZFd5WkxwWU40SjR4dFh0RFl5L1FHUms4Y0JaUkFhZGJBNGZnK2RHNUoyZ3ZzclFYdFpMeE9DOFhUCnBoZ2h0L0pyZ21wcTgrNVFIcjZpZmJrTHhLdjB5M0t3US94Z3d0Y3NSSk1ZK1M4cDc2aFUzNXBWQmMwR0Z0YXAKSWpsek1ZdkgyOC9WRXVFSEFsckdZM0ozWDU1MXBBbjd3N211aUx2ZFM2bjVwTXlGcGh1NEFlRUZ3MXVkV3RNRgoyL0pYSyttMUVQM1hrR25kQWQ4dHZ1bFhKdnFnUWtaOEhOZ1B3eGZKUE5WdldrLysxd3h5QUZac29ZajBJVTBOCjJHaDZxZEx1T0crU0FrQzBaMStFQWczTUhSWklwUUlEQVFBQm80R1pNSUdXTUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZgpCZ05WSFNNRUdEQVdnQlJOZWN3UVJiRXdxVTlVNDl4eU1UZHhnYTE3bHpBMkJnTlZIUkVFTHpBdGdpdHJiMjVuCkxXTnZiblJ5YjJ4c1pYSXRkbUZzYVdSaGRHbHZiaTEzWldKb2IyOXJMbXR2Ym1jdWMzWmpNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDWUl2cFYrTDZ6bHkrV2tuWnVtSjlzMDFMOXp4ZGdrWWxTY0tvbWdRS3VIUUdsOTF6dQpMRDVUMHpHRG1TYVh3Z204S09Sc09FMG1CWFp1MGkyNXRjREZRS1lMVDNXcllGZzlYM1BNRzJuRCtLcHkwS2hzClFYU1l6bjE5ZGxKcmpJMVNWOFVnUjB3WVUxQm9kZmtrd05VTzRWdVNFUExwcG90SERaVk1PV1N4YSs3cjF2dHYKTDh5d2I5c1JoTGpsd0F1di95ak1uVHVEY3dJNU1lenNoRG9rTFR3WkdvckZLTlpKZzRsZklpRE5GaWxacExIKwpTd1lTc2tRbnVVQ2RMQmR1Qm9rK0dyblpuamtQd3M2SXhxejU3cTZHMVJQZW51RjA3aTJ5bVM5U2NDY3p4UGp6ClBMbDdKMXRSYmN4QUJUalVENC9WRUM0R3lFSVB2TktrYmU1KwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM1lkdnI5dWx1RXpKODZtcU5Vdkg2L2xPOGp1MjdJK3l2Z0FvY0hWTmpCeEFmTG9sClYrN2FyQ3prQmNKRCtWRmRXeVpMcFlONEo0eHRYdERZeS9RR1JrOGNCWlJBYWRiQTRmZytkRzVKMmd2c3JRWHQKWkx4T0M4WFRwaGdodC9KcmdtcHE4KzVRSHI2aWZia0x4S3YweTNLd1EveGd3dGNzUkpNWStTOHA3NmhVMzVwVgpCYzBHRnRhcElqbHpNWXZIMjgvVkV1RUhBbHJHWTNKM1g1NTFwQW43dzdtdWlMdmRTNm41cE15RnBodTRBZUVGCncxdWRXdE1GMi9KWEsrbTFFUDNYa0duZEFkOHR2dWxYSnZxZ1FrWjhITmdQd3hmSlBOVnZXay8rMXd4eUFGWnMKb1lqMElVME4yR2g2cWRMdU9HK1NBa0MwWjErRUFnM01IUlpJcFFJREFRQUJBb0lCQUNwTXpEVEdPalNnNVFjVAo1SjVjcEFZWkNzd1NQdkdZMXNhVS9TUE1Ja3lZc0crZ2s3VGd0UHlmYmNMenYwc0NFRk54VW94K09CbEZKVFV2CnA5WDUrS0RBUmxlQ1lYSlVRV3hrbkhoYS90c1YzOUdDQ2p4c0FITWJDVGp6N3F4VEs5Z3hQYzdxT0g1R1pIeWgKTXZBUTdhTlRlUGppWGcrV1NxdWxjdVZSN2k0R21ZbllSaVduV25xWXJTcTJMN2tDQ0hqYkdNeC95NExDRytYaQplVjkxUk8yWGRmK3RVVjNNdkhBeFhkdklvbWxtZWs4WmVqRVBlRjUrazFML0NVTVVPTk9jYXZVSUdvWGlBb2FTCmZFQ2wweU5NcDBrQkFmSHZDOFlPMzVRanBvZU1QZkhjbTBBNlp4M0kyb1E2OENKaTdnQm41VVl2ZmFXSmErbUUKNlhxdCtGa0NnWUVBOFl0TkpwQk1uK3hVZklkZVNieTVqeDhJYnlKK0ZEdFlkcWlyUXk2RFJyaVpvbzdiVU5YdQpsTEV4bWtQSU1xOEcycDJOMGc1ZDFSUis2b0pOZDJLOU1sNklSU2JsWjAxS0VkeFpPWHg4OElPUC8zYkYwMnE1CnBXRW9PZVJTMWhDNU5NUVMyREhtenlyeWlCbnJtL0YwLzU2d1QvcmVZcWkxenBXUHJHSnB5ZGNDZ1lFQTZzbDcKeUd1bXhoeGVsWENGN2NkdWtMbkNrOC9qZGFhSDdIalJIc3VMUjd5cWZ2SndIek1iVFZTWHdMQzFKcklBQzZJeApEWnJhcGhJNXVJMGJVTDlkY2lGYUpkWlQwbXJOcE5xUVlxbytjQVRESGcvcEJBY3NlZXRBYk90NElqUTBjUExrCndraW1OVkw3NGJ6blBVbGl5dnBZK3FISFRJY1VZaHB4WVJQV1NlTUNnWUVBNkEyK2R4Z1dwV1cwM1ZabjNVdDAKc2UxTWV3aVdPL1d2elgvSjJXY3NNNXRSN254MGN6cTBWU0hPMTdmYTgrWjNIVHhVYmNQam5ieHRHZnRKVlRNRgpOUWpndmg3YU1kNXRGSyt2QUsxNmtzNnlYdW5Lc0l4T0FuWk80UjliL2RCZlBqUkpMbTd5b1lGUE5EWkN4clM0CmhJUCtPemgyd2kzM1RKc2ZScXZkbWswQ2dZQW5DczRzcThvVjA0M2U1OUU5a3haTnRyWW1na0ZleFF5QlJDM3kKSXdMTU1SRmcvc3VxUklOYnZwOWxpWHoyTEU5Wm4rVHNVRDNmczlRcFhqMldsZHZpS0sybThSY0xQSHRwMkhaKwpFYlZFUjJaeXowNStQdnNrWXZ4Wm9HWmZ1YkttdloxUXVXZjZJZ3lFb3pjSXQvVlhyMzJ3WDhxV2JUZjBnRlV1ClFYQTI1UUtCZ0hRcktkL0VsYW90eS9JblpiWUNTRk1RTTJUL3hJWFF0YWZhSnF6YlZlOTNObkV2UlprcEpXMTYKOHh4eU03NVcwa0NhK1lpZW54bk02OWYwelc2VmQyazdTUkdYRjl2MmZWeWhPY2YxK0VLajFhWU01MjdhY2Y1Tgp2czlORGtDR1Z2bjdHQUh4MTkrUUM3aTBxSDA2cCs4V1lDc0srZzdsM0ZSeXRjdVFOdVNICi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
  name: kong-controller
rules:

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-controller
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-controller
subjects:
  - kind: ServiceAccount
    name: kong-controller
    namespace: kong
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-controller
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-controller
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-controller
subjects:
  - kind: ServiceAccount
    name: kong-controller
    namespace: kong
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-controller-validation-webhook
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/controller/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-controller-metrics
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/gateway/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-admin
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  clusterIP: None
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: ingress/charts/gateway/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-manager
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: ingress/charts/gateway/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-proxy
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: ingress/charts/controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-controller
  namespace:  kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-controller-token
        kuma.io/gateway: "enabled"
        traffic.kuma.io/exclude-outbound-ports: "8444"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8444"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: controller
        helm.sh/chart: controller-2.46.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.8"
        app.kubernetes.io/component: app
        app: kong-controller
        
        version: "3.8"
    spec:
      serviceAccountName: kong-controller
      automountServiceAccountToken: false
      
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_SVC
          value: "kong/kong-gateway-admin"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "kong/kong-gateway-proxy"
        
        image: kong/kubernetes-ingress-controller:3.4
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-controller-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
       
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-controller-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-controller-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-controller-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-controller-validation-webhook-keypair
---
# Source: ingress/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace:  kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-gateway-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: gateway
        helm.sh/chart: gateway-2.46.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.8"
        app.kubernetes.io/component: app
        app: kong-gateway
        
        version: "3.8"
    spec:
      serviceAccountName: kong-gateway
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.8
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: kong-gateway-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-gateway-tmp
          mountPath: /tmp
      containers:
      - name: "proxy"
        image: kong:3.8
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-gateway-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-gateway-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-gateway-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-gateway-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-gateway-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-controller-validations
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.46.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRZm5sMmplMjBhSVBvSEtIS3pMRi9MakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEF4TURRd09EUTJNVEJhRncwegpOVEF4TURJd09EUTJNVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1hUGR6am9aVTZ5dGNPeEI2VE5JbkowRTdiVTAKc1piWkkybjhXamlhZFhnbTNUM3Mwb3FGZ2tMbFlXK1dKSE1pa3YyR0UxRXNmYWtTZmRiZnRDUStTdU11bmlZMgpxVVA3dU5NcWJXRVBTTWNOK3RCS3JPUFg3eVJMejQ2bWtoWDJ4WGhuRXFwVTAzMi84QWlUUEV0TERMWjBUaytaCjA4aGhVVlJtOWlxdzMxMUp3QlY2dkpLdktvRzA4WHdJekxFRzBXR0xadTltYjRsZGErclptbmJVMGJXdzE1dnMKTEljOU9FbGlsZEpQOUdIeG1sNm92QWt6UVZoZDVvVlpqUTZGSDI1N0t1SjZ6ajg1ZDlTQ3pOS1lTVVVoRkloUwpRY0IrNVNVVEpTQmFETm9rUWQxbzZRdnJEMDFyMEt6OEhEOHVXSXR5eU5xYm5rZzBrQ2p3Z2xsbmd3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFMTV6QkJGc1RDcFQxVGozSEl4TjNHQgpyWHVYTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOVBuRWZyRXFJRjJYb0xlVCsrNjhJM1hmVHVYd1JPNDAyCmtLVHFMVThwOVEvbUgwNEx1bkU1aFR6SXJZd0ZxRk1HTTdWTjgyd2o3TE1vVURxWUhKRW5ldkZ6d2Q5d0JIZHoKMWZObENNRVFkUVpYMkg1anlIek1sV2xSdHhsWGhmMVFTM3ROd09OcytBb042YmZIQ1Q4Yk8rSlNCZkRVNHN0dgphWE1YNk4ydEE5VUU2bXNiVXNFeTdIaS9DVzVEMFQzdnJ3cUNTUGZqNllPVmxCT3RvTkZqWGlDS3NrcVVrdXowCit3RnFyNU50MkJpQzlBTStrTkVhMElqSFBHMFhsdWZoL2ExdG12WHV6Vy9ndGhDWk9PWENnTS9pZ1BKVHhzc3cKQVY5ZkhiaE5jVDZGMVFBUldITDZOb0xsYmRnbzJKV1RQdE9LR1J4N2IyV0lzZE4wejl0SgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRZm5sMmplMjBhSVBvSEtIS3pMRi9MakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEF4TURRd09EUTJNVEJhRncwegpOVEF4TURJd09EUTJNVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1hUGR6am9aVTZ5dGNPeEI2VE5JbkowRTdiVTAKc1piWkkybjhXamlhZFhnbTNUM3Mwb3FGZ2tMbFlXK1dKSE1pa3YyR0UxRXNmYWtTZmRiZnRDUStTdU11bmlZMgpxVVA3dU5NcWJXRVBTTWNOK3RCS3JPUFg3eVJMejQ2bWtoWDJ4WGhuRXFwVTAzMi84QWlUUEV0TERMWjBUaytaCjA4aGhVVlJtOWlxdzMxMUp3QlY2dkpLdktvRzA4WHdJekxFRzBXR0xadTltYjRsZGErclptbmJVMGJXdzE1dnMKTEljOU9FbGlsZEpQOUdIeG1sNm92QWt6UVZoZDVvVlpqUTZGSDI1N0t1SjZ6ajg1ZDlTQ3pOS1lTVVVoRkloUwpRY0IrNVNVVEpTQmFETm9rUWQxbzZRdnJEMDFyMEt6OEhEOHVXSXR5eU5xYm5rZzBrQ2p3Z2xsbmd3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFMTV6QkJGc1RDcFQxVGozSEl4TjNHQgpyWHVYTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOVBuRWZyRXFJRjJYb0xlVCsrNjhJM1hmVHVYd1JPNDAyCmtLVHFMVThwOVEvbUgwNEx1bkU1aFR6SXJZd0ZxRk1HTTdWTjgyd2o3TE1vVURxWUhKRW5ldkZ6d2Q5d0JIZHoKMWZObENNRVFkUVpYMkg1anlIek1sV2xSdHhsWGhmMVFTM3ROd09OcytBb042YmZIQ1Q4Yk8rSlNCZkRVNHN0dgphWE1YNk4ydEE5VUU2bXNiVXNFeTdIaS9DVzVEMFQzdnJ3cUNTUGZqNllPVmxCT3RvTkZqWGlDS3NrcVVrdXowCit3RnFyNU50MkJpQzlBTStrTkVhMElqSFBHMFhsdWZoL2ExdG12WHV6Vy9ndGhDWk9PWENnTS9pZ1BKVHhzc3cKQVY5ZkhiaE5jVDZGMVFBUldITDZOb0xsYmRnbzJKV1RQdE9LR1J4N2IyV0lzZE4wejl0SgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRZm5sMmplMjBhSVBvSEtIS3pMRi9MakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEF4TURRd09EUTJNVEJhRncwegpOVEF4TURJd09EUTJNVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1hUGR6am9aVTZ5dGNPeEI2VE5JbkowRTdiVTAKc1piWkkybjhXamlhZFhnbTNUM3Mwb3FGZ2tMbFlXK1dKSE1pa3YyR0UxRXNmYWtTZmRiZnRDUStTdU11bmlZMgpxVVA3dU5NcWJXRVBTTWNOK3RCS3JPUFg3eVJMejQ2bWtoWDJ4WGhuRXFwVTAzMi84QWlUUEV0TERMWjBUaytaCjA4aGhVVlJtOWlxdzMxMUp3QlY2dkpLdktvRzA4WHdJekxFRzBXR0xadTltYjRsZGErclptbmJVMGJXdzE1dnMKTEljOU9FbGlsZEpQOUdIeG1sNm92QWt6UVZoZDVvVlpqUTZGSDI1N0t1SjZ6ajg1ZDlTQ3pOS1lTVVVoRkloUwpRY0IrNVNVVEpTQmFETm9rUWQxbzZRdnJEMDFyMEt6OEhEOHVXSXR5eU5xYm5rZzBrQ2p3Z2xsbmd3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFMTV6QkJGc1RDcFQxVGozSEl4TjNHQgpyWHVYTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOVBuRWZyRXFJRjJYb0xlVCsrNjhJM1hmVHVYd1JPNDAyCmtLVHFMVThwOVEvbUgwNEx1bkU1aFR6SXJZd0ZxRk1HTTdWTjgyd2o3TE1vVURxWUhKRW5ldkZ6d2Q5d0JIZHoKMWZObENNRVFkUVpYMkg1anlIek1sV2xSdHhsWGhmMVFTM3ROd09OcytBb042YmZIQ1Q4Yk8rSlNCZkRVNHN0dgphWE1YNk4ydEE5VUU2bXNiVXNFeTdIaS9DVzVEMFQzdnJ3cUNTUGZqNllPVmxCT3RvTkZqWGlDS3NrcVVrdXowCit3RnFyNU50MkJpQzlBTStrTkVhMElqSFBHMFhsdWZoL2ExdG12WHV6Vy9ndGhDWk9PWENnTS9pZ1BKVHhzc3cKQVY5ZkhiaE5jVDZGMVFBUldITDZOb0xsYmRnbzJKV1RQdE9LR1J4N2IyV0lzZE4wejl0SgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-controller-validation-webhook
      namespace: kong
